# -*- coding: utf-8 -*-
"""
/***************************************************************************
 NADMapsDialog
                                 A QGIS plugin
 Centrale plek om handige kaarten voor waterketen en rioolbeheer te vinden en snel in te laden.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2025-01-09
        git sha              : $Format:%H$
        copyright            : (C) 2025 by Netwerk Waterketen Delfland
        email                : dataplatform@waterketendelfland.nl
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from qgis.PyQt.QtCore import Qt

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'nad_maps_dockwidget.ui'))


class NADMapsDockWidget(QtWidgets.QDockWidget, FORM_CLASS):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("NADMapsDockWidget")
        self.setWindowTitle("NAD Maps")
        self.setAllowedAreas(Qt.LeftDockWidgetArea | Qt.RightDockWidgetArea)

        # Set up the main widget
        self.main_widget = QtWidgets.QWidget()
        self.setupUi(self.main_widget)
        self.setWidget(self.main_widget)

        self.activeMapListView.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.activeMapListView.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)

        self.themaView.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.themaView.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)

        self.themaMapListView.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)

        self.mapListView.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.mapListView.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
